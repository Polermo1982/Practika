// Задача 31: Задайте массив из 12 элементов,
// заполненный случайными числами из промежутка [-9, 9]. Найдите сумму
// отрицательных и положительных элементов массива.
// Например в массиве [3, 9, -8, 1, 0, -7, 2, -1, 8, -3, -1, 6] сумма
// положительных чисел равна 29. Сумма отрицательных равна -20.


//Разбиваем задачу. Сначала пишем методы для генерации, заполнения и вывода массива на экран, потом пишем метод для подсчета суммы
//Для подсчета суммы не подойдёт тип данныч int потому что надо вернуть 2 вида чисел и положительное и отрицательное. Сумму положительного
//и сумму отрицательного. Поэтому мы вернём просто МАССИВ из 2 элементов!





int[] CreateArrayRndInt (int size, int min, int max)                      //Тело метода. Создаем метод который будет возвращать массив. В методе мы будем создавать массив и сразу его заполнять. (CreateArrayRndInt-название метода, int size-параметр метода, размер ) int min, int max-от минимального значения диапазона до максимального.
{
    int[] array = new int[size];                                         //Создаем сам массив и передаем его параметры - размер [size], которые указали в теле метода
    Random rnd = new Random();                                           //Заполняем чем то наш массив, сщздаем объект Random(экземпляр обьекта)
    for (int i = 0; i < size; i++)                                       // Дальше нужно пройтись по массиву с помощью цикла (for, создаем шаблон for+квадрат в всплывающем меню, вместо length пишем size)
    {
        array[i] = rnd.Next(min, max + 1);                                //Присваиваем значение нашим элементам массива(rnd из 11 строчки), чтобы потом использовать в цикле. В () задаем диапазон от min до max+1 из 8 строки. 
    } 
    return array;                                                         //Возвращаем значение массива из 10 строки, метод готов - создает массив и заполняет его случайными целыми числами.                                    
}
//Далее необходим вспомогательный метод чтобы увидеть это все в консоли и для печати. подойдёт метод void, потому что нам не нужно ничего возвращать. просто вывести и напечатать.
void PrintArray (int[] array)                                             //Название метода, в () параметр -(int[] array) наш массив из 10 строки.
{
    Console.Write("[");                                                   //Результат вывода. Вся строка начнется с квадратной скобки, 26 строка. закончится квадратной скобкой
    for (int i = 0; i < array.Length; i++)                                //Через цикл мы будем выводить данные в консоль. i<array.Length - свойство именно массива
    {
        if(i < array.Length - 1) Console.Write($"{array[i]}, ");          //Создаем условие: ЕСЛИ i < array.Length - 1, то выводим число через запятую         
        else Console.Write($"{array[i]}");                                //ИНАЧЕ выводим без запятой. Будет последний элемент строки выведен.
    } 
    Console.Write("]");                                                   //строка при выводе в консоль заканчивается квадратной скобкой. Начало в 21 строке
}
//Создаем метод для вычисления положительного и отрицательного значений.
int[] GetSumPosNegElem(int[] array)                                      //Создаем метод для вычисления положительного и отрицательного значения(по условию задачи), в () передаем аргумент (int[] array)
{
    int sumNeg = 0;                                                       //Для начала создаем переменные, которые будут хранить значение этих сумм.(по условию задачи). int sumNeg = 0 - переменная для отрицательных значений.
    int sumPos = 0;                                                       //int sumPos = 0 - Переменная для суммы положительных значений

    for (int i = 0; i < array.Length; i++)                                //Дальше нужно пройтись по самому массиву, создаем цикл for. i < array.Length - пишем свойство именно массива.
    {
        if(array[i] < 0) sumNeg += array[i];                             //Если значение элемента массива меньше 0, то записываем сумму в переменную sumNeg из 40 строки        
        else sumPos += array[i];                                         //иначе(если значение массива больше 0), записываем значение в переменную sumPos.
    }                                                                   
//Теперь значения сумм, по условию задачи нужно вернуть.
    return new int[]{sumNeg, sumPos};                                        //Возвращаем значения посчитанных отрицательной и положительной суммы.
}                                                                  


int[] arr = CreateArrayRndInt(12, -9, 9);                                 //Вызываем наш метод CreateArrayRndI, в скобках указываем параметры, согласно условию задачи. 12 элементов от -9 до 9   
PrintArray(arr);                                                          //выводим на печать
Console.WriteLine();                                                      //Перевод курсора на зледующую строку                                                   
int[] result = GetSumPosNegElem(arr);                                     //Создаем переменную соответствующего типа для вывода результата, присваиваем ей метод GetSumPosNegElem и в него передаем массив (arr).
Console.WriteLine($"Сумма отрицательных чисел = {result[0]}");            //выводим на экран именно массив и индексом 0({result[0]}).
Console.WriteLine($"Сумма положительных чисел = {result[1]}");            //Выводим на экран значение индекса массива 1({result[1]}).
                                                                          //Мы решили вывести результат в виде массива из 2 чисел. массив начинается с индекса 0